name: Build and test the project

on:
  workflow_call:
    inputs:
      report_dir:
        type: string
        required: true
      report_context:
        type: string
        required: true
    secrets:
      SONAR_TOKEN:
        required: true
      SSH_TESTING_SERVER_HOST:
        required: true
      SSH_TESTING_SERVER_PORT:
        required: true
      SSH_TESTING_SERVER_USER:
        required: true
      SSH_TESTING_SERVER_PASSWORD:
        required: true

env:
  xb_version: "1.5.1"

jobs:

  test:
    name: Test and push Sonar analysis
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
      - name: Install Samtools
        run: sudo apt-get install samtools
      - name: Test and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify surefire-report:report  org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=opencb_biodata
      - name: Upload result dir
        uses: actions/upload-artifact@v3
        with:
          name: workdir
          path: "**/target/site"

  publish-test:
    name: Publish test results
    runs-on: ubuntu-22.04
    needs: test
    strategy:
      matrix:
        module: [ "biodata-tools","biodata-models" ]
    steps:
      - name: Download result dir
        uses: actions/download-artifact@v3
        with:
          name: workdir
      - name: Deploy unit tests web recursively to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ${{ matrix.module }}/target/site
          remote: /var/www/html/reports/${{ inputs.report_context }}/${{ env.xb_version }}/${{ inputs.report_dir }}/unit/${{ matrix.module }}
          host: ${{ secrets.SSH_TESTING_SERVER_HOST}}
          port: ${{ secrets.SSH_TESTING_SERVER_PORT}}
          username: ${{ secrets.SSH_TESTING_SERVER_USER }}
          password: ${{ secrets.SSH_TESTING_SERVER_PASSWORD }}
          concurrency: 2