//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.03.15 at 01:36:40 AM GMT 
//


package org.opencb.biodata.formats.variant.clinvar.vcv.v10jaxb;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeMethodlist.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="typeMethodlist">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="literature only"/>
 *     &lt;enumeration value="reference population"/>
 *     &lt;enumeration value="case-control"/>
 *     &lt;enumeration value="clinical testing"/>
 *     &lt;enumeration value="in vitro"/>
 *     &lt;enumeration value="in vivo"/>
 *     &lt;enumeration value="research"/>
 *     &lt;enumeration value="curation"/>
 *     &lt;enumeration value="not provided"/>
 *     &lt;enumeration value="provider interpretation"/>
 *     &lt;enumeration value="phenotyping only"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "typeMethodlist")
@XmlEnum
public enum TypeMethodlist {

    @XmlEnumValue("literature only")
    LITERATURE_ONLY("literature only"),
    @XmlEnumValue("reference population")
    REFERENCE_POPULATION("reference population"),
    @XmlEnumValue("case-control")
    CASE_CONTROL("case-control"),
    @XmlEnumValue("clinical testing")
    CLINICAL_TESTING("clinical testing"),
    @XmlEnumValue("in vitro")
    IN_VITRO("in vitro"),
    @XmlEnumValue("in vivo")
    IN_VIVO("in vivo"),
    @XmlEnumValue("research")
    RESEARCH("research"),
    @XmlEnumValue("curation")
    CURATION("curation"),
    @XmlEnumValue("not provided")
    NOT_PROVIDED("not provided"),
    @XmlEnumValue("provider interpretation")
    PROVIDER_INTERPRETATION("provider interpretation"),
    @XmlEnumValue("phenotyping only")
    PHENOTYPING_ONLY("phenotyping only");
    private final String value;

    TypeMethodlist(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeMethodlist fromValue(String v) {
        for (TypeMethodlist c: TypeMethodlist.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
